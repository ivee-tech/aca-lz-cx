## Azure DevOps Pipeline: Deploy new revision of Planets Frontend Container App
## --------------------------------------------------------------------------
# Deploys the static frontend container to the target Azure Container App. Reuses the
# shared container app deployment template so backend and frontend follow the same pattern.

trigger: none

resources:
  pipelines:
    - pipeline: planetsFrontendBuild
      source: Planets-Frontend-Build
      branch: main
      trigger: true

parameters:
  - name: imageTag
    displayName: Image tag to deploy (ignored if useDigest = true). For auto trigger, leave default to use build output tag.
    type: string
    default: ''
  - name: useDigest
    displayName: Use immutable image digest instead of tag
    type: boolean
    default: true
  - name: imageDigest
    displayName: Explicit image digest (sha256:...) override (leave blank to auto-resolve from build artifact)
    type: string
    default: ''
  - name: trafficWeight
    displayName: Traffic weight (0-100) for NEW revision (multi-revision only). 100 = full cutover.
    type: number
    default: 100
  - name: forceMultipleRevisions
    displayName: Force Container App to multiple revision mode before traffic assignment
    type: boolean
    default: false

variables:
  acrName: 'crnascmieoldevaue'
  repository: 'planets-frontend'
  resourceGroup: 'rg-nasc-spoke-dev-001'          # TODO: set your RG
  containerAppName: 'ca-nasc-planets-web'   # TODO: set your Container App name
  azureSubscription: 'SC-ACA'
  acrLoginServer: '$(acrName).azurecr.io'
  shortSha: $[ substring(variables['Build.SourceVersion'], 0, 7) ]
  runId: '$(Build.BuildId)'
  revisionSuffix: 'r-$(shortSha)-$(runId)'

pool:
  vmImage: 'ubuntu-latest'

stages:
  - template: templates/stage-containerapp-deploy.yml
    parameters:
      stageName: Deploy
      stageDisplayName: Deploy Planets Frontend Revision
      jobName: DeployRevision
      jobDisplayName: Update Container App Image
      buildPipelineAlias: 'planetsFrontendBuild'
      azureSubscription: '$(azureSubscription)'
      useDigest: ${{ parameters.useDigest }}
      imageDigest: ${{ parameters.imageDigest }}
      imageTag: ${{ parameters.imageTag }}
      trafficWeight: ${{ parameters.trafficWeight }}
      forceMultipleRevisions: ${{ parameters.forceMultipleRevisions }}
