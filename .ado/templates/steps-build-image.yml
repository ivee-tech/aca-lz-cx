# Template: Build Docker Image (manual docker CLI build; local tags only)
# Usage:
# - template: .ado/templates/steps-build-image.yml@self
#   parameters:
#     repository: myapp
#     dockerfile: path/to/Dockerfile
#     buildContext: .
#     tags: |
#       $(imageTag)
#       latest
#     additionalBuildArgs: 'N/A'

parameters:
  - name: repository
    type: string
  - name: dockerfile
    type: string
  - name: buildContext
    type: string
  - name: tags
    type: string
  - name: additionalBuildArgs
    type: string
    default: 'N/A'

steps:
  - script: |
      set -e
      echo "Building image locally via docker CLI"
      echo "Repository base: ${{ parameters.repository }}"
      ADDITIONAL_ARGS="${{ parameters.additionalBuildArgs }}"
      if [ "$ADDITIONAL_ARGS" = "N/A" ]; then
        ADDITIONAL_ARGS=""
      fi
      FIRST_TAG=$(printf "%s" "${{ parameters.tags }}" | head -1)
      if [ -z "$FIRST_TAG" ]; then
        echo "No tags provided; aborting." >&2
        exit 1
      fi
      echo "Primary build tag: $FIRST_TAG"
      [ -n "$ADDITIONAL_ARGS" ] && echo "Using additional build args: $ADDITIONAL_ARGS"
      docker build -f "${{ parameters.dockerfile }}" "${{ parameters.buildContext }}" -t "${{ parameters.repository }}:$FIRST_TAG" $ADDITIONAL_ARGS
      printf "%s" "${{ parameters.tags }}" | tail -n +2 | while read -r t; do
        [ -z "$t" ] && continue
        echo "Tagging additional: $t"
        docker tag "${{ parameters.repository }}:$FIRST_TAG" "${{ parameters.repository }}:$t"
      done
    displayName: 'Build image (docker CLI)'

  - script: |
      echo "Listing images for repository ${{ parameters.repository }} after build:"
      docker images --format '{{.Repository}}:{{.Tag}}\t{{.ID}}' | grep '^${{ parameters.repository }}:' || echo 'No exact local-only tags found.'
    displayName: 'Debug: List built image tags'
